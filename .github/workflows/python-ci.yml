# .github/workflows/python-ci.yml

# نام Workflow شما
name: Python CI for Memory Game

# چه زمانی این Workflow باید اجرا شود؟
# در اینجا، هر زمان که کدی به شاخه‌های main یا master پوش شود
on:
  push:
    branches:
      - main
      - master
  pull_request: # همچنین برای Pull Request ها هم اجرا شود
    branches:
      - main
      - master

# تعریف Job ها (مراحل)
jobs:
  build-and-test: # نام Job
    runs-on: ubuntu-latest # سیستم عاملی که Workflow روی آن اجرا می‌شود (مثلاً اوبونتو)

    steps:
      # مرحله اول: دانلود کد از ریپازیتوری
      - name: Checkout repository code
        uses: actions/checkout@v4

      # مرحله دوم: تنظیم محیط پایتون
      - name: Set up Python environment
        uses: actions/setup-python@v5
        with:
          python-version: '3.x' # از جدیدترین نسخه پایتون 3 استفاده کن (مثلاً 3.9, 3.10, 3.11...)

      # مرحله سوم: نصب وابستگی‌ها (شما از pygame استفاده کرده‌اید)
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pygame # چون پروژه شما از pygame استفاده می‌کند، نصب آن ضروری است

      # مرحله چهارم: اجرای تست‌ها (اگر تست‌های خودکار دارید)
      # برای این پروژه، تست خودکاری تعریف نشده است.
      - name: Run tests (if applicable)
        run: |
          echo "No automated tests configured. This step passes as no tests are defined."
          # اگر در آینده تست‌هایی اضافه کردید، دستوراتشان را اینجا بنویسید (مثلاً pytest)

      # مرحله پنجم: بررسی سینتکس فایل اصلی پایتون
      # از py_compile برای بررسی سینتکسی کد main.py استفاده می‌کنیم.
      # برنامه‌های GUI مثل این بازی نمی‌توانند در محیط GitHub Actions Runner اجرا شوند.
      - name: Check Python syntax of main script
        run: |
          python -m py_compile main.py
          # اگر این دستور بدون خطا اجرا شود، یعنی main.py از نظر سینتکسی صحیح است.